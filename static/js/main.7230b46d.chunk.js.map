{"version":3,"sources":["DetailDialog.jsx","TabPanel.jsx","App.jsx","index.js"],"names":["DetailDialog","props","classes","content","open","handleClose","key","yearFact","setYearFact","React","async","axios","get","concat","releaseYear","then","res","data","catch","error","console","log","fetchData","react","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","Typography","className","bold","description","DialogActions","Button","onClick","useStyles","makeStyles","theme","root","display","flexWrap","maxWidth","fontWeight","item","margin","spacing","unit","padding","minWidth","image","with","TabPanel","children","value","index","other","setOpen","useState","Array","length","fill","react_default","a","createElement","Object","assign","role","hidden","Box","map","obj","i","Paper","elevation","arr","handleClickOpen","style","width","src","images","url","alt","loading","variant","App","tabs","setTabs","series","setSeries","movies","setMovies","useEffect","sample","entries","filter","o","programType","toLowerCase","match","dataM","AppBar","position","Toolbar","component","sx","borderBottom","borderColor","Tabs","onChange","event","newTab","Tab","label","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7230b46d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography\n} from \"@material-ui/core\";\n\nexport default function DetailDialog(props) {\n  const { classes, content, open, handleClose, key } = props;\n  const [yearFact, setYearFact] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      await axios\n        .get(\n          `https://cors-everywhere.herokuapp.com/http://numbersapi.com/${content.releaseYear}/year`\n        )\n        .then((res) => {\n          setYearFact(res.data);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    };\n    fetchData();\n  }, [content]);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={() => handleClose(key)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{content.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Year: {content.releaseYear}</DialogContentText>\n          <Typography className={classes.bold}>Fun Fact:</Typography>\n          <DialogContentText>{yearFact}</DialogContentText>\n          <Typography className={classes.bold}>Description:</Typography>\n          <DialogContentText id=\"alert-dialog-description\">\n            {content.description}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(key)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Paper, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DetailDialog from \"./DetailDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    maxWidth: \"100%\"\n  },\n  bold: {\n    fontWeight: 600\n  },\n  item: {\n    margin: theme.spacing.unit,\n    padding: theme.spacing.unit * 2,\n    minWidth: 100,\n    maxWidth: 150\n  },\n  image: {\n    with: 100\n  }\n}));\n\nexport default function TabPanel(props) {\n  const classes = useStyles();\n  const { children, value, index, content, ...other } = props;\n  const [open, setOpen] = React.useState(Array(content.length).fill(false));\n\n  const handleClickOpen = (i) => {\n    open[i] = true;\n    setOpen((arr) => [...arr]);\n  };\n  const handleClose = (i) => {\n    open[i] = false;\n    setOpen((arr) => [...arr]);\n  };\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} {...other}>\n      {value === index && (\n        <Box className={classes.root}>\n          {content &&\n            content.map((obj, i) => (\n              <Paper\n                elevation={3}\n                className={classes.item}\n                key={i}\n                onClick={() => handleClickOpen(i)}\n              >\n                <img\n                  className={classes.image}\n                  style={{ width: \"100%\" }}\n                  src={obj.images[\"Poster Art\"].url}\n                  alt={obj.title}\n                  loading=\"lazy\"\n                />\n                <Typography variant=\"h6\">{obj.title} </Typography>\n                <DetailDialog\n                  classes={classes}\n                  key={i}\n                  open={open[i]}\n                  handleClose={() => handleClose(i)}\n                  content={obj}\n                />\n              </Paper>\n            ))}\n        </Box>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { AppBar, Toolbar, Typography, Box, Tabs, Tab } from \"@material-ui/core\";\nimport TabPanel from \"./TabPanel\";\nimport sample from \"./sample.json\";\n\nexport default function App() {\n  const [tabs, setTabs] = React.useState(0);\n  const [series, setSeries] = useState([]);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const data = sample.entries.filter((o) => {\n      return o.programType.toLowerCase().match(\"series\");\n    });\n    // console.log(data);\n    setSeries(data);\n    const dataM = sample.entries.filter((o) => {\n      return o.programType.toLowerCase().match(\"movie\");\n    });\n    setMovies(dataM);\n  }, []);\n\n  const handleChange = (event, newTab) => {\n    setTabs(newTab);\n  };\n  // console.log(series, movies)\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography component=\"h4\" variant=\"h6\">\n            Streaming Demo\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs value={tabs} variant=\"fullWidth\" onChange={handleChange}>\n          <Tab label=\"Movies\" />\n          <Tab label=\"Series\" />\n        </Tabs>\n      </Box>\n      <Box style={{ width: \"100%\" }}>\n        <TabPanel value={tabs} content={movies} index={0} />\n        <TabPanel value={tabs} content={series} index={1} />\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}